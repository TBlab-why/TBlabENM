
#' @title Occurrence Data Check
#' @description 检查物种发生数据是否存在缺失值以及是否在指定的海拔范围内。
#' @param sp 物种发生数据的路径。.csv文件的路径，csv文件的前三列必须是
#' species, longitude and latitude, 其余列不做要求。
#' @param evdir 环境变量路径。格式为 .asc 或者 .tif。
#' @param elevation 海拔范围，单位m。字符型向量。
#' @param elrange 数值型向量。允许的海拔误差，单位m。默认500m。
#' @param evselectev 字符型；用于检查数据的变量，第一个要为海拔变量。一种类型的变量选择一个即可。
#'
#' @return 返回可能存在问题的数据，需要对这些数据进行检查。
#' @export
#' @importFrom raster stack
#' @importFrom raster extract
#' @importFrom stringr str_which
#' @importFrom utils read.csv
#' @importFrom utils write.csv
#' @author 吴海洋 和 田斌
#'
#' @examples
#'
#' #读取坐标点文件路径
#' splist <- list.files(paste0(system.file(package="TBlabENM"), "/extdata/species"),
#'                      full.names = TRUE)
#' #提取第一个物种文件的路径，香港木兰Lirianthe championii。
#' sp <- splist[1]
#' #数据检查
#' ENMspcheck(sp = sp,
#'            evdir = paste0(system.file(package="TBlabENM"), "/extdata/present"),
#'            #用于检查的变量，一种类型的变量选择一个即可
#'            evselectev = c("elev30", "bio01", "SU_CODE", "uvb1"),
#'            #海拔范围从植物志查询
#'            elevation = c(1000,1200),
#'            #默认误差范围为500m
#'            elrange = 500)
ENMspcheck <- function(sp, evdir, evselectev, elevation, elrange=200 ) {
#读取栅格数据列表
biolist <- list.files(evdir, pattern="(tif|asc)$", full.names = TRUE)
#选择要检查的变量，并stack
evselectevdir <- c()
for (i in seq_along(evselectev)) {
  evselectevdir1 <- biolist[stringr::str_which(biolist, evselectev[i])]
  evselectevdir <- c(evselectevdir, evselectevdir1)
}
biostack_t <- raster::stack(evselectevdir)
#读取物种坐标数据并提取出经纬度列
occ1 <- utils::read.csv(sp)
occ <- occ1[c(2,3)]
#提取每个坐标点对应的环境值并转为数据框
occdata_t <- as.data.frame(raster::extract(biostack_t, occ))
#检查缺失值所在行
row_NA <- which(rowSums(is.na(occdata_t))!=0)

#合并occ和occdata_t
occdata <- cbind(occ1[1:3], occdata_t)
#判断坐标点是否在海拔范围之内,这里的F为符合要求的数据

occ_e <- ifelse(occdata_t[[1]] <= (max(elevation) + elrange)
         & occdata_t[[1]] >= (min(elevation)- elrange), F, T)
occ_e[which(is.na(occ_e))] <- F

#sum(occ_e)==0和length(row_NA)==0说明数据都符合要求，否则发出警告
ifelse(sum(occ_e)==0 & length(row_NA)==0,
       return("The data set passes the altitude range and ENM envionment variables check"),
       warning("The above coordinate points have some problem in elevation or ENM envionment variables, please check now.", call. = F))
#对有问题的3种情况进行相应的输出
if(sum(occ_e)!=0 & length(row_NA)==0) {return(occdata[occ_e,])}
if(sum(occ_e)==0 & length(row_NA)!=0) {return(occdata[row_NA,])}
if(sum(occ_e)!=0 & length(row_NA)!=0) {return(rbind(occdata[occ_e,], occdata[row_NA,]))}
}


