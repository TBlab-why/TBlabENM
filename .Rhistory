#创建保存路径
dir.create(path, recursive = TRUE, showWarnings = FALSE)
##读取所有的二值图路径
piclist <- list.files(picdir, pattern = "tif|TIF$", all.files = F, full.names = T)
##先对时期循环
if(is.null(proname)==FALSE) {
for (i in seq_along(proname)) {
piclist1 <- piclist[grepl(paste0("-", proname[i]), piclist, ignore.case = F)]
#从符合的时期中挑选想要的物种
pic <- c()
for (j in x) {
p <- piclist1[grepl(paste0(spdata[j,1], "-"), piclist1, ignore.case = F)]
pic <- c(pic, p)
}
#根据路径创建stack文件
r_s <- raster::stack(pic)
#对所有栅格求和
richness <- sum(r_s)
raster::writeRaster(richness, "D:/Desktop/dd.tif")
# richness <- raster::calc(r_s, fun = sum, overwrite=F,
#   filename = paste0(path,"/", proname[i], "-sprichness.tif"))
}
}
ENMRorSR <- function(x, spdata, proname = NULL, picdir, path) {
if (file.exists(picdir)==FALSE){
stop("Picdir not find.")}
#创建保存路径
dir.create(path, recursive = TRUE, showWarnings = FALSE)
##读取所有的二值图路径
piclist <- list.files(picdir, pattern = "tif|TIF$", all.files = F, full.names = T)
##先对时期循环
if(is.null(proname)==FALSE) {
for (i in seq_along(proname)) {
piclist1 <- piclist[grepl(paste0("-", proname[i]), piclist, ignore.case = F)]
#从符合的时期中挑选想要的物种
pic <- c()
for (j in x) {
p <- piclist1[grepl(paste0(spdata[j,1], "-"), piclist1, ignore.case = F)]
pic <- c(pic, p)
}
#根据路径创建stack文件
r_s <- raster::stack(pic)
#对所有栅格求和
richness <- sum(r_s)
raster::writeRaster(richness, "D:/Desktop/dd.tif")
# richness <- raster::calc(r_s, fun = sum, overwrite=F,
#    filename = paste0(path,"/", proname[i], "-sprichness.tif"))
}
}
if(is.null(proname)) {
pic <- c()
for (i in x) {
p <- piclist[grepl(paste0(spdata[i,1], "-"), piclist, ignore.case = F)]
pic <- c(pic, p)
}
r_s <- raster::stack(pic)
refuga <- raster::calc(r_s, fun = sum, overwrite=F,
filename = paste0(path, "/spp-refuga.tif"))
}
}
ENMRorSR <- function(x, spdata, proname = NULL, picdir, path) {
if (file.exists(picdir)==FALSE){
stop("Picdir not find.")}
#创建保存路径
dir.create(path, recursive = TRUE, showWarnings = FALSE)
##读取所有的二值图路径
piclist <- list.files(picdir, pattern = "tif|TIF$", all.files = F, full.names = T)
##先对时期循环
if(is.null(proname)==FALSE) {
for (i in seq_along(proname)) {
piclist1 <- piclist[grepl(paste0("-", proname[i]), piclist, ignore.case = F)]
#从符合的时期中挑选想要的物种
pic <- c()
for (j in x) {
p <- piclist1[grepl(paste0(spdata[j,1], "-"), piclist1, ignore.case = F)]
pic <- c(pic, p)
}
#根据路径创建stack文件
r_s <- raster::stack(pic)
#对所有栅格求和
richness <- sum(r_s)
raster::writeRaster(richness, "D:/Desktop/dd.tif")
# richness <- raster::calc(r_s, fun = sum, overwrite=F,
#    filename = paste0(path,"/", proname[i], "-sprichness.tif"))
}}
if(is.null(proname)) {
pic <- c()
for (i in x) {
p <- piclist[grepl(paste0(spdata[i,1], "-"), piclist, ignore.case = F)]
pic <- c(pic, p)
}
r_s <- raster::stack(pic)
refuga <- raster::calc(r_s, fun = sum, overwrite=F,
filename = paste0(path, "/spp-refuga.tif"))
}}
picdir <- "I:/Magnoliaceae/TBlabENM/BooleanmapT_MTSStr"
spdata <- read.csv("I:/Magnoliaceae/TBlabENM/spdata1.csv")
library(tidyverse)
spdata_w <- filter(spdata, class=="W")
spdata_e <- filter(spdata, class=="E")
ENMRorSR(x = c(1:nrow(spdata_e)),
spdata = spdata_e,
#注意：根据需要确定是否需要该参数。
periodname = c("70ccr85"),
picdir = "I:/Magnoliaceae/TBlabENM/BooleanmapT_MTSStr",
path = "I:/Magnoliaceae/TBlabENM/sprichness/spdata_e")
ENMRorSR(x = c(1:nrow(spdata_e)),
spdata = spdata_e,
#注意：根据需要确定是否需要该参数。
proname = c("70ccr85"),
picdir = "I:/Magnoliaceae/TBlabENM/BooleanmapT_MTSStr",
path = "I:/Magnoliaceae/TBlabENM/sprichness/spdata_e")
ENMRorSR <- function(x, spdata, proname = NULL, picdir, path) {
if (file.exists(picdir)==FALSE){
stop("Picdir not find.")}
#创建保存路径
dir.create(path, recursive = TRUE, showWarnings = FALSE)
##读取所有的二值图路径
piclist <- list.files(picdir, pattern = "tif|TIF$", all.files = F, full.names = T)
##先对时期循环
if(is.null(proname)==FALSE) {
for (i in seq_along(proname)) {
piclist1 <- piclist[grepl(paste0("-", proname[i]), piclist, ignore.case = F)]
#从符合的时期中挑选想要的物种
pic <- c()
for (j in x) {
p <- piclist1[grepl(paste0(spdata[j,1], "-"), piclist1, ignore.case = F)]
pic <- c(pic, p)
}
#根据路径创建stack文件
r_s <- raster::stack(pic)
#对所有栅格求和
richness <- sum(r_s)
filename = paste0(path,"/", proname[i], "-sprichness.tif")
raster::writeRaster(richness, filename)
}}
if(is.null(proname)) {
pic <- c()
for (i in x) {
p <- piclist[grepl(paste0(spdata[i,1], "-"), piclist, ignore.case = F)]
pic <- c(pic, p)
}
richness <- sum(r_s)
filename = paste0(path, "/spp-refuga.tif")
raster::writeRaster(richness, filename)
}}
ENMRorSR(x = c(1:1),
spdata = spdata_e,
#注意：根据需要确定是否需要该参数。
proname = c("70ccr85"),
picdir = "I:/Magnoliaceae/TBlabENM/BooleanmapT_MTSStr",
path = "I:/Magnoliaceae/TBlabENM/sprichness/spdata_e")
ENMRorSR(x = c(1:2),
spdata = spdata_e,
#注意：根据需要确定是否需要该参数。
proname = c("70ccr85"),
picdir = "I:/Magnoliaceae/TBlabENM/BooleanmapT_MTSStr",
path = "I:/Magnoliaceae/TBlabENM/sprichness/spdata_e")
spdata_e
spdata = spdata_e
x = c(1:2)
proname = c("70ccr85")
picdir = "I:/Magnoliaceae/TBlabENM/BooleanmapT_MTSStr"
piclist <- list.files(picdir, pattern = "tif|TIF$", all.files = F, full.names = T)
piclist
for (i in seq_along(proname)) {
piclist1 <- piclist[grepl(paste0("-", proname[i]), piclist, ignore.case = F)]
#从符合的时期中挑选想要的物种
pic <- c()
for (j in x) {
p <- piclist1[grepl(paste0(spdata[j,1], "-"), piclist1, ignore.case = F)]
pic <- c(pic, p)
}
r_s <- raster::stack(pic)
#对所有栅格求和
richness <- sum(r_s)
filename = paste0(path,"/", proname[i], "-sprichness.tif")
raster::writeRaster(richness, filename)
}
i
piclist1 <- piclist[grepl(paste0("-", proname[i]), piclist, ignore.case = F)]
piclist1
pic <- c()
for (j in x) {
p <- piclist1[grepl(paste0(spdata[j,1], "-"), piclist1, ignore.case = F)]
pic <- c(pic, p)
}
pic
piclist
piclist <- list.files(picdir, pattern = "tif$|TIF$", all.files = F, full.names = T)
piclist
ENMRorSR <- function(x, spdata, proname = NULL, picdir, path) {
if (file.exists(picdir)==FALSE){
stop("Picdir not find.")}
#创建保存路径
dir.create(path, recursive = TRUE, showWarnings = FALSE)
##读取所有的二值图路径
piclist <- list.files(picdir, pattern = "tif$|TIF$", all.files = F, full.names = T)
##先对时期循环
if(is.null(proname)==FALSE) {
for (i in seq_along(proname)) {
piclist1 <- piclist[grepl(paste0("-", proname[i]), piclist, ignore.case = F)]
#从符合的时期中挑选想要的物种
pic <- c()
for (j in x) {
p <- piclist1[grepl(paste0(spdata[j,1], "-"), piclist1, ignore.case = F)]
pic <- c(pic, p)
}
#根据路径创建stack文件
r_s <- raster::stack(pic)
#对所有栅格求和
richness <- sum(r_s)
filename = paste0(path,"/", proname[i], "-sprichness.tif")
raster::writeRaster(richness, filename)
}}
ENMRorSR <- function(x, spdata, proname = NULL, picdir, path) {
if (file.exists(picdir)==FALSE){
stop("Picdir not find.")}
#创建保存路径
dir.create(path, recursive = TRUE, showWarnings = FALSE)
##读取所有的二值图路径
piclist <- list.files(picdir, pattern = "tif$|TIF$", all.files = F, full.names = T)
##先对时期循环
if(is.null(proname)==FALSE) {
for (i in seq_along(proname)) {
piclist1 <- piclist[grepl(paste0("-", proname[i]), piclist, ignore.case = F)]
#从符合的时期中挑选想要的物种
pic <- c()
for (j in x) {
p <- piclist1[grepl(paste0(spdata[j,1], "-"), piclist1, ignore.case = F)]
pic <- c(pic, p)
}
#根据路径创建stack文件
r_s <- raster::stack(pic)
#对所有栅格求和
richness <- sum(r_s)
filename = paste0(path,"/", proname[i], "-sprichness.tif")
raster::writeRaster(richness, filename)
}}
if(is.null(proname)) {
pic <- c()
for (i in x) {
p <- piclist[grepl(paste0(spdata[i,1], "-"), piclist, ignore.case = F)]
pic <- c(pic, p)
}
richness <- sum(r_s)
filename = paste0(path, "/spp-refuga.tif")
raster::writeRaster(richness, filename)
}}
ENMRorSR(x = c(1:2),
spdata = spdata_e,
#注意：根据需要确定是否需要该参数。
proname = c("70ccr85"),
picdir = "I:/Magnoliaceae/TBlabENM/BooleanmapT_MTSStr",
path = "I:/Magnoliaceae/TBlabENM/sprichness/spdata_e")
#丰富度计算(示例少个括号)
ENMRorSR(x = c(1:1),
spdata = spdata_e,
#注意：根据需要确定是否需要该参数。
proname = c("70ccr85"),
picdir = "I:/Magnoliaceae/TBlabENM/BooleanmapT_MTSStr",
path = "I:/Magnoliaceae/TBlabENM/sprichness/spdata_e")
ENMRorSR(x = c(1:5),
spdata = spdata_e,
#注意：根据需要确定是否需要该参数。
proname = c("70ccr85"),
picdir = "I:/Magnoliaceae/TBlabENM/BooleanmapT_MTSStr",
path = "I:/Magnoliaceae/TBlabENM/sprichness/spdata_e")
#丰富度计算(示例少个括号)
ENMRorSR(x = c(1:2),
spdata = spdata_e,
#注意：根据需要确定是否需要该参数。
proname = c("70ccr85"),
picdir = "I:/Magnoliaceae/TBlabENM/BooleanmapT_MTSStr",
path = "I:/Magnoliaceae/TBlabENM/sprichness/spdata_e")
#丰富度计算(示例少个括号)
ENMRorSR(x = c(1:3),
spdata = spdata_e,
#注意：根据需要确定是否需要该参数。
proname = c("70ccr85"),
picdir = "I:/Magnoliaceae/TBlabENM/BooleanmapT_MTSStr",
path = "I:/Magnoliaceae/TBlabENM/sprichness/spdata_e")
#丰富度计算(示例少个括号)
ENMRorSR(x = c(1:5),
spdata = spdata_e,
#注意：根据需要确定是否需要该参数。
proname = c("70ccr85"),
picdir = "I:/Magnoliaceae/TBlabENM/BooleanmapT_MTSStr",
path = "I:/Magnoliaceae/TBlabENM/sprichness/spdata_e")
#丰富度计算(示例少个括号)
ENMRorSR(x = c(1:4),
spdata = spdata_e,
#注意：根据需要确定是否需要该参数。
proname = c("70ccr85"),
picdir = "I:/Magnoliaceae/TBlabENM/BooleanmapT_MTSStr",
path = "I:/Magnoliaceae/TBlabENM/sprichness/spdata_e")
#丰富度计算(示例少个括号)
ENMRorSR(x = c(1:4, 6),
spdata = spdata_e,
#注意：根据需要确定是否需要该参数。
proname = c("70ccr85"),
picdir = "I:/Magnoliaceae/TBlabENM/BooleanmapT_MTSStr",
path = "I:/Magnoliaceae/TBlabENM/sprichness/spdata_e")
#丰富度计算(示例少个括号)
ENMRorSR(x = c(5, 6),
spdata = spdata_e,
#注意：根据需要确定是否需要该参数。
proname = c("70ccr85"),
picdir = "I:/Magnoliaceae/TBlabENM/BooleanmapT_MTSStr",
path = "I:/Magnoliaceae/TBlabENM/sprichness/spdata_e")
spdata_e[5,]
?sum
ENMRorSR <- function(x, spdata, proname = NULL, picdir, path) {
if (file.exists(picdir)==FALSE){
stop("Picdir not find.")}
#创建保存路径
dir.create(path, recursive = TRUE, showWarnings = FALSE)
##读取所有的二值图路径
piclist <- list.files(picdir, pattern = "tif$|TIF$", all.files = F, full.names = T)
##先对时期循环
if(is.null(proname)==FALSE) {
for (i in seq_along(proname)) {
piclist1 <- piclist[grepl(paste0("-", proname[i]), piclist, ignore.case = F)]
#从符合的时期中挑选想要的物种
pic <- c()
for (j in x) {
p <- piclist1[grepl(paste0(spdata[j,1], "-"), piclist1, ignore.case = F)]
pic <- c(pic, p)
}
#根据路径创建stack文件
r_s <- raster::stack(pic)
#对所有栅格求和
richness <- sum(r_s, na.rm = TRUE)
filename = paste0(path,"/", proname[i], "-sprichness.tif")
raster::writeRaster(richness, filename)
}}
if(is.null(proname)) {
pic <- c()
for (i in x) {
p <- piclist[grepl(paste0(spdata[i,1], "-"), piclist, ignore.case = F)]
pic <- c(pic, p)
}
richness <- sum(r_s)
filename = paste0(path, "/spp-refuga.tif")
raster::writeRaster(richness, filename)
}}
spdata <- read.csv("I:/Magnoliaceae/TBlabENM/spdata1.csv")
library(tidyverse)
spdata_w <- filter(spdata, class=="W")
spdata_e <- filter(spdata, class=="E")
#丰富度计算(示例少个括号)
ENMRorSR(x = c(5, 6),
spdata = spdata_e[5,],
#注意：根据需要确定是否需要该参数。
proname = c("70ccr85"),
picdir = "I:/Magnoliaceae/TBlabENM/BooleanmapT_MTSStr",
path = "I:/Magnoliaceae/TBlabENM/sprichness/spdata_e")
#丰富度计算(示例少个括号)
ENMRorSR(x = c(5, 6),
spdata = spdata_e,
#注意：根据需要确定是否需要该参数。
proname = c("70ccr85"),
picdir = "I:/Magnoliaceae/TBlabENM/BooleanmapT_MTSStr",
path = "I:/Magnoliaceae/TBlabENM/sprichness/spdata_e")
getwd
getwd()
devtools::document()
devtools::document()
devtools::build()
devtools::document()
devtools::document()
devtools::build()
library(TBlabENM)
spdata <- read.csv("I:/Magnoliaceae/TBlabENM/spdata1.csv")
library(tidyverse)
spdata_w <- filter(spdata, class=="W")
spdata_e <- filter(spdata, class=="E")
spdata_e
#丰富度计算(示例少个括号)
ENMRorSR(x = c(1:31),
spdata = spdata_e,
#注意：根据需要确定是否需要该参数。
proname = c("70ccr85"),
picdir = "I:/Magnoliaceae/TBlabENM/BooleanmapT_MTSStr",
path = "I:/Magnoliaceae/TBlabENM/sprichness/spdata_e")
#丰富度计算(示例少个括号)
ENMRorSR(x = c(1:31),
spdata = spdata_e,
#注意：根据需要确定是否需要该参数。
proname = c("lgmcc"),
picdir = "I:/Magnoliaceae/TBlabENM/BooleanmapT_MTSStr",
path = "I:/Magnoliaceae/TBlabENM/sprichness/spdata_e")
ENMrefuga_sp <- function(x, spdata, proname,
picdir = paste0("./TBlabENM/BooleanmapT_MTSSte")) {
####环境准备
##windows环境R如果无法识别中文路径时运行,最好不要有中文，也不要运行这行
#Sys.setlocale(category = "LC_ALL", locale="German")
###读取单个物种单个时期的二值图结果文件夹,该文件夹下不要有其他的无关tif
if (file.exists(picdir)==FALSE){
stop("Picdir not find.")}
piclist <- list.files(picdir,  full.names = T, pattern = "tif$|TIF$")
##选择指定的时期的所有二值图
piclist1 <- c()
for (i in seq_along(proname)) {
p <- piclist[grepl(paste0("-", proname[i]), piclist, ignore.case = F)]
piclist1 <- c(piclist1, p)
}
## 第一个位置：新建一个起始进度条
pb <- utils::txtProgressBar(style=3)
star_time <- Sys.time() ## 记录程序开始时间
#单个物种的避难所(x)
##挑选单个物种
###创建新的文件夹用来保存单个物种的叠加图
dir.create(paste0(getwd(), "/TBlabENM/sp_refuga", "-", proname[1],
"-", proname[length(proname)]), showWarnings = F)
for (i in x) {
r <- c()
for (j in seq_along(proname)) {
pic <- piclist1[grepl(
paste0(spdata[i, 1], "-"), piclist1, ignore.case = F) & grepl(
paste0("-", proname[j]), piclist1, ignore.case = F)]
r1 <- raster::raster(pic)
r <- c(r, r1) } #结束循环
r_s <- raster::stack(r)
####对选定时期的单个物种二值图进行叠加
refuga <- sum(r_s)
####对叠加的结果再次二值化
refuga1 <- raster::calc(refuga, fun=function(x){ifelse(x==length(proname), 1, 0)}, overwrite=TRUE,
filename = paste0(getwd(), "/TBlabENM/sp_refuga", "-", proname[1],
"-", proname[length(proname)], "/", spdata[i,1], "-refuga.tif"))
##第二个位置：实时显示进度
utils::setTxtProgressBar(pb,
((which(x==i)-1)*length(proname)+j)/(length(proname)*length(x)))
####打印进度
print(paste0(getwd(), "/TBlabENM/sp_refuga", "-", proname[1],
"-", proname[length(proname)], "/", spdata[i,1], "-refuga.tif"))
}
end_time <- Sys.time()  ## 记录程序结束时间
## 第三个位置关闭进度条
close(pb)
print(end_time - star_time)
}
getwd()
devtools::document()
devtools::build()
library(TBlabENM)
devtools::document()
devtools::build()
library(TBlabENM)
devtools::document()
devtools::build()
library(TBlabENM)
devtools::document()
devtools::document()
devtools::build()
library(TBlabENM)
devtools::build()
install.packages("renv")
renv::init()
renv::init() #记录R包的版本信息，依赖（加载包）的版本控制
# 初始化环境
renv::init()
# 保存当前所用的包环境，当然我们才刚刚开始开发，别的包都没有引入
renv::snapshot()
#R包添加readme文件用于介绍R包
usethis::use_readme_rmd()
#styler包美化代码
styler::style_pkg()
install.packages("styler")
install.packages("lintr")
#styler包美化代码
styler::style_pkg()
#styler包美化代码
styler::style_pkg()
#lintr包规范代码
lintr::lint_package()
#lintr包规范代码
lintr::lint_package("ENMcentroid")
#lintr包规范代码
lintr::lint_package("./R/ENMcentroid.R")
# 在 GitHub Action 中设置 lintr
usethis::use_github_action("lint")
usethis::use_version()
# 轻量版检查
devtools::check()
# 轻量版检查
devtools::check()
usethis::use_pkgdown()
# 让我们来试一下看创建我们的网站
pkgdown::build_site()
# 让我们来试一下看创建我们的网站
pkgdown::build_site()
# 让我们来试一下看创建我们的网站
pkgdown::build_site()
#用 Github Action 自动检查
usethis::use_tidy_github_actions()
# 增加 NEWS 页面，用于记录每一次升级所做出的变更
usethis::use_news_md()
# 添加 Code of Conduct
usethis::use_code_of_conduct()
?use_code_of_conduct
# 添加 Code of Conduct
usethis::use_code_of_conduct("1248720256@qq.com")
usethis::use_pkgdown()
usethis::use_pkgdown()
# 让我们来试一下看创建我们的网站
pkgdown::build_site()
devtools::install_github("TBlab-why/TBlabENM")
detach("package:TBlabENM", unload = TRUE)
remove.packages("TBlabENM")
devtools::install_github("TBlab-why/TBlabENM")
library(TBlabENM)
